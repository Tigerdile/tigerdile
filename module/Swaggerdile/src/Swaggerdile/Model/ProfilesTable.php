<?php
/*
 * ProfilesTable.php
 *
 * Auto-generated by modelBuild.py Model script
 *
 * @author sconley
 */

namespace Swaggerdile\Model;

class ProfilesTable extends ModelTable
{
    /*
     * Define our datastore table Kind
     *
     * @param string
     */
    protected $table = 'sd_profiles';

    /*
     * Generate unique 'URL' by looping on queries until
     * we find an available one.
     *
     * Theoretically, this will usually return right away.
     *
     * @param string base URL (or URL we want to try to use)
     * @return string    unique URL.
     */
    public function generateUniqueUrl($base)
    {
        $sequence = 1;
        $url = $base;

        while(1) {
            $res = $this->select(array('url' => $url));

            if(count($res)) {
                $url = "{$base}{$sequence}";
                $sequence++;
            } else {
                return $url;
            }
        }
    }

    /*
     * Get profiles that are sustainer level.
     *
     * This adds in display_name from users table.
     *
     * THIS RESPECTS ORDER BY AND LIMIT/OFFSET AND ADULT
     */
    public function fetchSustainerProfiles()
    {
        $rowset = $this->select(function($select) {
            $where = array(
                                'sd_profiles.is_visible' => 1,
                                'tigerd_usermeta.meta_key' => 'account_level',
                                'tigerd_usermeta.meta_value' => '3',
                            );

            if(!self::$_isAdult) {
                $where['is_nsfw'] = 0;
            }

            $select->join('tigerd_usermeta',
                          'tigerd_usermeta.user_id = sd_profiles.owner_id',
                          array())
                   ->join('tigerd_users',
                          'tigerd_users.ID = sd_profiles.owner_id',
                          array('display_name'))
                   ->where($where);

            return $this->_addQueryFeatures($select);
        });

        return $this->_returnArray($rowset);
    }

    /*
     * Get profiles with an optional search query.
     *
     * Only searches active profiles.
     *
     * @param string - Search query (optional)
     *
     * @return array of Profiles
     *
     * THIS RESPECTS ORDER BY AND LIMIT/OFFSET AND ADULT
     */
    public function fetchActiveWithSearch($query = false)
    {
        $rowset = $this->select(function($select) use ($query) {
            // Do we care about adult?
            $baseWhere = array(
                                'sd_profiles.is_visible' => 1,
            );

            if(!self::$_isAdult) {
                $baseWhere['sd_profiles.is_nsfw'] = 0;
            }

            $select->join('tigerd_users',
                          'tigerd_users.ID = sd_profiles.owner_id',
                          array('display_name'))
                   ->where($baseWhere);

            // Add in a fulltext query if we've got it
            if($query !== false) {
                $select->where(
                                array(
                                    new \Zend\Db\Sql\Predicate\Expression('match(sd_profiles.title, sd_profiles.content) against (? in boolean mode)', "${query}*")
                ));
            }

            return $this->_addQueryFeatures($select);
        });

        return $this->_returnArray($rowset);
    }
}
